/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
#include	"../constant/transportProperties" 

convertToMeters 1.0;

//LX -10;
//Lx 2.0;
//Ly 0.1;
//Lz 1.0;

vertices
(
    (0   0     0)      //0
    ($Lx 0     0)      //1
    ($Lx $Ly   0)      //2
    (0   $Ly   0)      //3
    (0   0   $Lz)      //4
    ($Lx 0   $Lz)      //5
    ($Lx $Ly $Lz)      //6
    (0   $Ly $Lz)      //7
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($NEx $NEy $NEz)
    simpleGrading (1 1 1)
    /*
        simpleGrading
        (
            1//((0.15 0.25 4) (0.6 0.5 1) (0.15 0.25 0.25))
            1
	   ((0.125 0.25 5) (0.5 0.5 1) (0.125 0.25 0.2))
        )
    */
);

edges
(
);

boundary
(
    top
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }
    
    bottom
    {
        type patch;
        faces
        (
            (3 2 1 0)
        );
    }
    
    left
    {
        //type patch;
		type cyclic;
		neighbourPatch right;
        //transform      translational;
        //separationVector ($Lx 0 0);
        //matchTolerance  1.e-6;       
        faces
        (
            (3 0 4 7)
        );
    }
    
    right
    {
        //type patch;
		type cyclic;
		neighbourPatch left;
        //transform      translational;
        //separationVector ($LX 0 0);
        //matchTolerance  1.e-6;       		                
        faces
        (
            (1 2 6 5)
        );
    }
    
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 5 4)
            (2 3 7 6)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //

